trigger: none # We only want to trigger manually or based on resources
pr: none

resources:
  pipelines:
  - pipeline: CI
    source: vs-threading
    trigger:
      tags:
      - auto-release

variables:
- group: VS SDK feeds

jobs:
- job: release
  pool:
    name: AzurePipelines-EO
    vmImage: AzurePipelinesUbuntu20.04compliant
  steps:
  - checkout: none
  - powershell: |
      Write-Host "##vso[build.updatebuildnumber]$(resources.pipeline.CI.runName)"
      if ('$(resources.pipeline.CI.runName)'.Contains('-')) {
        Write-Host "##vso[task.setvariable variable=IsPrerelease]true"
      } else {
        Write-Host "##vso[task.setvariable variable=IsPrerelease]false"
      }
    displayName: Set up pipeline
  - task: UseDotNet@2
    displayName: Install .NET SDK
    inputs:
      packageType: sdk
      version: 6.x
  - download: CI
    artifact: deployables-Windows
    displayName: Download deployables-Windows artifact
  - task: GitHubRelease@1
    displayName: GitHub release (create)
    inputs:
      gitHubConnection: AArnott
      repositoryName: $(Build.Repository.Name)
      target: $(resources.pipeline.CI.sourceCommit)
      tagSource: userSpecifiedTag
      tag: v$(resources.pipeline.CI.runName)
      title: v$(resources.pipeline.CI.runName)
      isDraft: true # After running this step, visit the new draft release, edit, and publish.
      isPreRelease: $(IsPrerelease)
      assets: |
        $(Pipeline.Workspace)/CI/deployables-Windows/NuGet/*.nupkg
        $(Pipeline.Workspace)/CI/deployables-Windows/SosThreadingTools.zip
      changeLogCompareToRelease: lastNonDraftRelease
      changeLogType: issueBased
      changeLogLabels: |
        [
          { "label" : "bug", "displayName" : "Fixes", "state" : "closed" },
          { "label" : "enhancement", "displayName": "Enhancements", "state" : "closed" }
        ]
  - script: dotnet nuget push $(Pipeline.Workspace)/CI/deployables-Windows/NuGet/*.nupkg -s https://api.nuget.org/v3/index.json --api-key $(NuGetOrgApiKey) --skip-duplicate
    displayName: Push packages to nuget.org
    condition: and(succeeded(), ne(variables['NuGetOrgApiKey'], ''))
  - script: dotnet nuget push $(Pipeline.Workspace)/CI/deployables-Windows/WinDBGGallery/*.nupkg -s https://pkgs.dev.azure.com/microsoft/_packaging/DebuggerExtensions/nuget/v3/index.json --api-key $(MicrosoftAzDOAccount) --skip-duplicate
    displayName: WinDBG Gallery
